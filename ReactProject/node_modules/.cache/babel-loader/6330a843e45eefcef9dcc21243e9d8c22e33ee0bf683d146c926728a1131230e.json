{"ast":null,"code":"var _jsxFileName = \"/Users/kjlee/Desktop/main/coding/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// Assuming you have a Note interface\nimport { dummyNotesList } from './constants';\nimport { FavoriteToggle } from './starterFiles/favoriteExercise';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to track the list of favorited note IDs\n  const [favoritedNoteIds, setFavoritedNoteIds] = useState([]);\n\n  // Function to handle when a note is favorited/unfavorited\n  const handleFavoriteToggle = (noteId, isFavorited) => {\n    setFavoritedNoteIds(prevFavorites => {\n      if (isFavorited) {\n        return [...prevFavorites, noteId]; // Add to the list if favorited\n      } else {\n        return prevFavorites.filter(id => id !== noteId); // Remove from the list if unfavorited\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Note Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favoriteList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Favorited Notes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), favoritedNoteIds.length > 0 ? favoritedNoteIds.map((id, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Note ID: \", id]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 47\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No favorites yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: dummyNotesList.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FavoriteToggle, {\n          noteId: note.id,\n          onFavoriteToggle: handleFavoriteToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"N5+5dIfhbF3b7GTK1BNfkwJCdgY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","dummyNotesList","FavoriteToggle","jsxDEV","_jsxDEV","App","_s","favoritedNoteIds","setFavoritedNoteIds","handleFavoriteToggle","noteId","isFavorited","prevFavorites","filter","id","className","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","length","map","index","note","title","content","label","onFavoriteToggle","_c","$RefreshReg$"],"sources":["/Users/kjlee/Desktop/main/coding/my-app/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Note } from './types';  // Assuming you have a Note interface\nimport { dummyNotesList } from './constants';\nimport { FavoriteToggle } from './starterFiles/favoriteExercise';\nimport './App.css';\n\nfunction App() {\n  // State to track the list of favorited note IDs\n  const [favoritedNoteIds, setFavoritedNoteIds] = useState<number[]>([]);\n\n  // Function to handle when a note is favorited/unfavorited\n  const handleFavoriteToggle = (noteId: number, isFavorited: boolean) => {\n    setFavoritedNoteIds((prevFavorites) => {\n      if (isFavorited) {\n        return [...prevFavorites, noteId];  // Add to the list if favorited\n      } else {\n        return prevFavorites.filter((id) => id !== noteId);  // Remove from the list if unfavorited\n      }\n    });\n  };\n\n  return (\n    <div className=\"app-container\">\n      <form className=\"note-form\">\n        <div>\n          <input placeholder=\"Note Title\"></input>\n        </div>\n        <div>\n          <textarea></textarea>\n        </div>\n        <div>\n          <button type=\"submit\">Create Note</button>\n        </div>\n      </form>\n\n      {/* Display the list of favorited note IDs */}\n      <div className=\"favoriteList\">\n        <h3>Favorited Notes:</h3>\n        {favoritedNoteIds.length > 0 ? (\n          favoritedNoteIds.map((id, index) => <p key={index}>Note ID: {id}</p>)\n        ) : (\n          <p>No favorites yet.</p>\n        )}\n      </div>\n\n      {/* Display the grid of all notes */}\n      <div className=\"notes-grid\">\n        {dummyNotesList.map((note) => (\n          <div key={note.id} className=\"note-item\">\n            <div className=\"notes-header\">\n              <button>x</button>\n            </div>\n            <h2>{note.title}</h2>\n            <p>{note.content}</p>\n            <p>{note.label}</p>\n            {/* Pass noteId and the handler for favorite toggle */}\n            <FavoriteToggle\n              noteId={note.id}\n              onFavoriteToggle={handleFavoriteToggle}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}