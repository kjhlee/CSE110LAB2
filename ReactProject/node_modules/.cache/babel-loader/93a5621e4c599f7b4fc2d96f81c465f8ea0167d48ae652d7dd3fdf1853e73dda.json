{"ast":null,"code":"var _jsxFileName = \"/Users/kjlee/Desktop/main/coding/my-app/src/starterFiles/favoriteExercise.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Define the prop types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FavoriteToggle({\n  onFavoriteChange,\n  isFavoriteInitially\n}) {\n  _s();\n  // State to track if the note is currently a favorite\n  const [isFavorite, setIsFavorite] = useState(isFavoriteInitially);\n\n  // Function to handle the toggle\n  const toggleFavorite = () => {\n    const newFavoriteState = !isFavorite;\n    setIsFavorite(newFavoriteState);\n    // Call the parent function to update the favorite list in App\n    onFavoriteChange(newFavoriteState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleFavorite,\n    style: {\n      background: 'none',\n      border: 'none',\n      cursor: 'pointer'\n    },\n    children: [isFavorite ? '❤️' : '♡', \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(FavoriteToggle, \"l0dEIxN7nc+1y8A/hwAzpioxk7g=\");\n_c = FavoriteToggle;\nvar _c;\n$RefreshReg$(_c, \"FavoriteToggle\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FavoriteToggle","onFavoriteChange","isFavoriteInitially","_s","isFavorite","setIsFavorite","toggleFavorite","newFavoriteState","onClick","style","background","border","cursor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kjlee/Desktop/main/coding/my-app/src/starterFiles/favoriteExercise.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\n// Define the prop types\ninterface FavoriteToggleProps {\n  onFavoriteChange: (newFavoriteState: boolean) => void; // Function that accepts the new favorite state\n  isFavoriteInitially: boolean; // Boolean to track if the note is initially a favorite\n}\n\nexport function FavoriteToggle({ onFavoriteChange, isFavoriteInitially }: FavoriteToggleProps) {\n  // State to track if the note is currently a favorite\n  const [isFavorite, setIsFavorite] = useState(isFavoriteInitially);\n\n  // Function to handle the toggle\n  const toggleFavorite = () => {\n    const newFavoriteState = !isFavorite;\n    setIsFavorite(newFavoriteState);\n    // Call the parent function to update the favorite list in App\n    onFavoriteChange(newFavoriteState);\n  };\n\n  return (\n    <button onClick={toggleFavorite} style={{ background: 'none', border: 'none', cursor: 'pointer' }}>\n      {isFavorite ? '❤️' : '♡'} {/* Filled heart if favorite, outlined if not */}\n    </button>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA,OAAO,SAASC,cAAcA,CAAC;EAAEC,gBAAgB;EAAEC;AAAyC,CAAC,EAAE;EAAAC,EAAA;EAC7F;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAACK,mBAAmB,CAAC;;EAEjE;EACA,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,gBAAgB,GAAG,CAACH,UAAU;IACpCC,aAAa,CAACE,gBAAgB,CAAC;IAC/B;IACAN,gBAAgB,CAACM,gBAAgB,CAAC;EACpC,CAAC;EAED,oBACER,OAAA;IAAQS,OAAO,EAAEF,cAAe;IAACG,KAAK,EAAE;MAAEC,UAAU,EAAE,MAAM;MAAEC,MAAM,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAU,CAAE;IAAAC,QAAA,GAC/FT,UAAU,GAAG,IAAI,GAAG,GAAG,EAAC,GAAC;EAAA;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEb;AAACd,EAAA,CAjBeH,cAAc;AAAAkB,EAAA,GAAdlB,cAAc;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}