{"ast":null,"code":"// import { useState, useContext } from 'react'\n// import { ThemeContext, themes } from \"./themeContext\";\n\n// export function ToggleTheme() {\n//     const [currTheme, setCurrTheme] = useState(themes.light);\n\n//     const toggleTheme = () => {\n//         setCurrTheme(currTheme === themes.light ? themes.dark : themes.light);\n//     };\n//     const theme = useContext(ThemeContext);\n//     return (\n//         <ThemeContext.Provider value={currTheme}>\n//             <button \n//                 onClick={toggleTheme} \n//                 style={{\n//                     background: currTheme.foreground, \n//                     color: currTheme.background, \n//                     padding: \"none\",\n//                     border: \"none\", \n//                     cursor: \"pointer\"\n//                 }}\n//             >\n//                 {currTheme === themes.light ? '☀︎' : '☼'}\n//             </button>\n//         </ThemeContext.Provider>\n//     );\n\n// }\n\n// export default ToggleTheme;","map":{"version":3,"names":[],"sources":["/Users/kjlee/Desktop/main/coding/my-app/src/starterFiles/toggleTheme.tsx"],"sourcesContent":["// import { useState, useContext } from 'react'\n// import { ThemeContext, themes } from \"./themeContext\";\n\n// export function ToggleTheme() {\n//     const [currTheme, setCurrTheme] = useState(themes.light);\n\n//     const toggleTheme = () => {\n//         setCurrTheme(currTheme === themes.light ? themes.dark : themes.light);\n//     };\n//     const theme = useContext(ThemeContext);\n//     return (\n//         <ThemeContext.Provider value={currTheme}>\n//             <button \n//                 onClick={toggleTheme} \n//                 style={{\n//                     background: currTheme.foreground, \n//                     color: currTheme.background, \n//                     padding: \"none\",\n//                     border: \"none\", \n//                     cursor: \"pointer\"\n//                 }}\n//             >\n//                 {currTheme === themes.light ? '☀︎' : '☼'}\n//             </button>\n//         </ThemeContext.Provider>\n//     );\n\n// }\n\n// export default ToggleTheme;"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}