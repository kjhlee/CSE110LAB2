{"ast":null,"code":"var _jsxFileName = \"/Users/kjlee/Desktop/main/coding/my-app/src/starterFiles/favoriteExercise.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FavoriteToggle({\n  note,\n  updateFavorites\n}) {\n  _s();\n  // set the useState to be false\n  const [favorite, setfavorite] = useState(false);\n\n  // const [favlist, setfavlist] = useState([]) \n\n  // go between true and false when clicked\n  const handleClick = () => {\n    const newFavoriteStatus = !favorite;\n    // console.log(note, newFavoriteStatus)\n\n    setfavorite(newFavoriteStatus);\n    updateFavorites(note, newFavoriteStatus);\n  };\n  return (\n    /*#__PURE__*/\n    // handles the favorite button flips back and forward\n    _jsxDEV(\"button\", {\n      onClick: handleClick,\n      style: {\n        background: 'none',\n        border: 'none',\n        cursor: 'pointer'\n      },\n      children: favorite ? '❤️' : '♡'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(FavoriteToggle, \"tB/Pq8VV/y+uQz1ZIGwpz50bgew=\");\n_c = FavoriteToggle;\nvar _c;\n$RefreshReg$(_c, \"FavoriteToggle\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FavoriteToggle","note","updateFavorites","_s","favorite","setfavorite","handleClick","newFavoriteStatus","onClick","style","background","border","cursor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kjlee/Desktop/main/coding/my-app/src/starterFiles/favoriteExercise.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {Label, Note} from \"../types\"\n\n\nexport function FavoriteToggle({ note, updateFavorites }: { note: string, updateFavorites: (note: string, isFavorite: boolean) => void }) {\n    // set the useState to be false\n    const [favorite, setfavorite] = useState(false)\n\n    // const [favlist, setfavlist] = useState([]) \n\n    // go between true and false when clicked\n    const handleClick = () => {\n        const newFavoriteStatus = !favorite;\n        // console.log(note, newFavoriteStatus)\n        \n        setfavorite(newFavoriteStatus);\n        updateFavorites(note, newFavoriteStatus);\n    }\n    return (\n        // handles the favorite button flips back and forward\n        <button onClick={handleClick} style={\n            {   background: 'none', \n                border: 'none', \n                cursor: 'pointer' }\n            }>\n        {favorite ? '❤️' : '♡'}\n        </button>\n    );\n}\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAInD,OAAO,SAASC,cAAcA,CAAC;EAAEC,IAAI;EAAEC;AAAgG,CAAC,EAAE;EAAAC,EAAA;EACtI;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAE/C;;EAEA;EACA,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,iBAAiB,GAAG,CAACH,QAAQ;IACnC;;IAEAC,WAAW,CAACE,iBAAiB,CAAC;IAC9BL,eAAe,CAACD,IAAI,EAAEM,iBAAiB,CAAC;EAC5C,CAAC;EACD;IAAA;IACI;IACAR,OAAA;MAAQS,OAAO,EAAEF,WAAY;MAACG,KAAK,EAC/B;QAAIC,UAAU,EAAE,MAAM;QAClBC,MAAM,EAAE,MAAM;QACdC,MAAM,EAAE;MAAU,CACrB;MAAAC,QAAA,EACJT,QAAQ,GAAG,IAAI,GAAG;IAAG;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC;AAEjB;AAACd,EAAA,CAxBeH,cAAc;AAAAkB,EAAA,GAAdlB,cAAc;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}