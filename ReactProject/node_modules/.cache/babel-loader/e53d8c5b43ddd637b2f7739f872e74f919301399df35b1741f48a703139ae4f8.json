{"ast":null,"code":"var _jsxFileName = \"/Users/kjlee/Desktop/main/coding/my-app/src/starterFiles/hooksExercise.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ThemeContext, themes } from \"./themeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToggleTheme() {\n  _s();\n  const [currentTheme, setCurrentTheme] = useState(themes.light);\n  const toggleTheme = () => {\n    setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: currentTheme,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTheme,\n      children: \" Toggle Theme \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ClickCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n}\n_s(ToggleTheme, \"XUkQGtkba25k8FAF8WwW2uStAco=\");\n_c = ToggleTheme;\nexport default ToggleTheme;\nexport function ClickCounter() {\n  _s2();\n  const [count, setCount] = useState(0);\n  const handleClick = () => {\n    setCount(count + 1);\n  };\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  }, [count]);\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: theme.background,\n      color: theme.foreground,\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      style: {\n        background: theme.foreground,\n        color: theme.background\n      },\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s2(ClickCounter, \"QwTh87uW/LikTGP2WSDizL9Txl8=\");\n_c2 = ClickCounter;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToggleTheme\");\n$RefreshReg$(_c2, \"ClickCounter\");","map":{"version":3,"names":["React","useState","useEffect","ThemeContext","themes","jsxDEV","_jsxDEV","ToggleTheme","_s","currentTheme","setCurrentTheme","light","toggleTheme","dark","Provider","value","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ClickCounter","_c","_s2","count","setCount","handleClick","document","title","theme","useContext","style","background","color","foreground","padding","_c2","$RefreshReg$"],"sources":["/Users/kjlee/Desktop/main/coding/my-app/src/starterFiles/hooksExercise.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ThemeContext, themes } from \"./themeContext\";\n\nfunction ToggleTheme() {\n    const [currentTheme, setCurrentTheme] = useState(themes.light);\n   \n    const toggleTheme = () => {\n      setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\n    };\n   \n    return (\n      <ThemeContext.Provider value={currentTheme}>\n        <button onClick={toggleTheme}> Toggle Theme </button>\n        <ClickCounter />\n      </ThemeContext.Provider>\n    );\n}\n   \nexport default ToggleTheme;\n\nexport function ClickCounter() {\n    const [count, setCount] = useState(0);\n\n    const handleClick = () => {\n    setCount(count + 1);\n    };\n\n    useEffect(() => {\n    document.title = `You clicked ${count} times`;\n    }, [count]);\n\n    const theme = useContext(ThemeContext);\n    return (\n    <div\n        style={{\n        background: theme.background,\n        color: theme.foreground,\n        padding: \"20px\",\n        }}\n    >\n        <p>You clicked {count} times </p>\n        <button\n        onClick={() => setCount(count + 1)}\n        style={{ background: theme.foreground, color: theme.background }}\n        >\n        Click me\n        </button>\n    </div>\n    );\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,MAAM,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAACG,MAAM,CAACO,KAAK,CAAC;EAE9D,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBF,eAAe,CAACD,YAAY,KAAKL,MAAM,CAACO,KAAK,GAAGP,MAAM,CAACS,IAAI,GAAGT,MAAM,CAACO,KAAK,CAAC;EAC7E,CAAC;EAED,oBACEL,OAAA,CAACH,YAAY,CAACW,QAAQ;IAACC,KAAK,EAAEN,YAAa;IAAAO,QAAA,gBACzCV,OAAA;MAAQW,OAAO,EAAEL,WAAY;MAAAI,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDf,OAAA,CAACgB,YAAY;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE9B;AAACb,EAAA,CAbQD,WAAW;AAAAgB,EAAA,GAAXhB,WAAW;AAepB,eAAeA,WAAW;AAE1B,OAAO,SAASe,YAAYA,CAAA,EAAG;EAAAE,GAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAM0B,WAAW,GAAGA,CAAA,KAAM;IAC1BD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACnB,CAAC;EAEDvB,SAAS,CAAC,MAAM;IAChB0B,QAAQ,CAACC,KAAK,GAAG,eAAeJ,KAAK,QAAQ;EAC7C,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMK,KAAK,GAAGC,UAAU,CAAC5B,YAAY,CAAC;EACtC,oBACAG,OAAA;IACI0B,KAAK,EAAE;MACPC,UAAU,EAAEH,KAAK,CAACG,UAAU;MAC5BC,KAAK,EAAEJ,KAAK,CAACK,UAAU;MACvBC,OAAO,EAAE;IACT,CAAE;IAAApB,QAAA,gBAEFV,OAAA;MAAAU,QAAA,GAAG,cAAY,EAACS,KAAK,EAAC,SAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjCf,OAAA;MACAW,OAAO,EAAEA,CAAA,KAAMS,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MACnCO,KAAK,EAAE;QAAEC,UAAU,EAAEH,KAAK,CAACK,UAAU;QAAED,KAAK,EAAEJ,KAAK,CAACG;MAAW,CAAE;MAAAjB,QAAA,EAChE;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACG,GAAA,CA7BeF,YAAY;AAAAe,GAAA,GAAZf,YAAY;AAAA,IAAAC,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}