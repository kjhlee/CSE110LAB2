{"ast":null,"code":"var _jsxFileName = \"/Users/kjlee/Desktop/main/coding/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport './App.css';\n\n// function App(){\n//   return (\n//     <div className = 'app-container'>\n//       <form className = \"note-form\">\n//         <div><input placeholder = \"Note Title\"></input></div>\n//         <div><textarea></textarea></div>\n//         <div><button type = \"submit\">Create Note</button></div>\n//       </form>\n//       <div className=\"notes-grid\">\n//        {dummyNotesList.map((note) => (\n//          <div\n//            key={note.id}\n//            className=\"note-item\">\n//            <div className=\"notes-header\">\n//              <button>x</button>\n//            </div>\n//            <h2> {note.title} </h2>\n//            <p> {note.content} </p>\n//            <p> {note.label} </p>\n//          </div>\n//        ))}\n//      </div>\n//      <ClickCounter></ClickCounter>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport './App.css'; // Import your CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State to store notes and favorites\n  const [notes, setNotes] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n\n  // Function to add a new note\n  const addNote = (title, content, category) => {\n    const newNote = {\n      id: Date.now(),\n      title,\n      content,\n      category,\n      isFavorite: false // Default to not favorite\n    };\n    setNotes([...notes, newNote]);\n  };\n\n  // Function to toggle favorite status of a note\n  const toggleFavorite = id => {\n    const updatedNotes = notes.map(note => {\n      if (note.id === id) {\n        return {\n          ...note,\n          isFavorite: !note.isFavorite\n        };\n      }\n      return note;\n    });\n    setNotes(updatedNotes);\n    updateFavoriteList(updatedNotes);\n  };\n\n  // Function to update the favorite notes list\n  const updateFavoriteList = updatedNotes => {\n    const favNotes = updatedNotes.filter(note => note.isFavorite);\n    setFavorites(favNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      onSubmit: e => {\n        e.preventDefault();\n        // Call addNote here with the form values\n        addNote('Test Note', 'Note content', 'category');\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Note Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Note Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"personal\",\n          children: \"Personal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"work\",\n          children: \"Work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"study\",\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleFavorite(note.id),\n          children: [note.isFavorite ? '❤️' : '♡', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"List of favorites:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: favorites.map(fav => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: fav.title\n      }, fav.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5y0V4I2tn4tG+WFQFzQv1GRIsPo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","notes","setNotes","favorites","setFavorites","addNote","title","content","category","newNote","id","Date","now","isFavorite","toggleFavorite","updatedNotes","map","note","updateFavoriteList","favNotes","filter","className","children","onSubmit","e","preventDefault","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","value","type","onClick","fav","_c","$RefreshReg$"],"sources":["/Users/kjlee/Desktop/main/coding/my-app/src/App.tsx"],"sourcesContent":["import {Label, Note} from \"./types\"\nimport { dummyNotesList } from \"./constants\"\nimport { ClickCounter } from \"./starterFiles/hooksExercise\"\nimport './App.css';\n\n// function App(){\n//   return (\n//     <div className = 'app-container'>\n//       <form className = \"note-form\">\n//         <div><input placeholder = \"Note Title\"></input></div>\n//         <div><textarea></textarea></div>\n//         <div><button type = \"submit\">Create Note</button></div>\n//       </form>\n//       <div className=\"notes-grid\">\n//        {dummyNotesList.map((note) => (\n//          <div\n//            key={note.id}\n//            className=\"note-item\">\n//            <div className=\"notes-header\">\n//              <button>x</button>\n//            </div>\n//            <h2> {note.title} </h2>\n//            <p> {note.content} </p>\n//            <p> {note.label} </p>\n//          </div>\n//        ))}\n//      </div>\n//      <ClickCounter></ClickCounter>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport './App.css'; // Import your CSS\n\nconst App = () => {\n  // State to store notes and favorites\n  const [notes, setNotes] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n\n  // Function to add a new note\n  const addNote = (title, content, category) => {\n    const newNote = {\n      id: Date.now(),\n      title,\n      content,\n      category,\n      isFavorite: false, // Default to not favorite\n    };\n    setNotes([...notes, newNote]);\n  };\n\n  // Function to toggle favorite status of a note\n  const toggleFavorite = (id) => {\n    const updatedNotes = notes.map((note) => {\n      if (note.id === id) {\n        return { ...note, isFavorite: !note.isFavorite };\n      }\n      return note;\n    });\n\n    setNotes(updatedNotes);\n    updateFavoriteList(updatedNotes);\n  };\n\n  // Function to update the favorite notes list\n  const updateFavoriteList = (updatedNotes) => {\n    const favNotes = updatedNotes.filter(note => note.isFavorite);\n    setFavorites(favNotes);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <form className=\"note-form\" onSubmit={(e) => { \n        e.preventDefault(); \n        // Call addNote here with the form values\n        addNote('Test Note', 'Note content', 'category');\n      }}>\n        <input placeholder=\"Note Title\" />\n        <textarea placeholder=\"Note Content\" />\n        <select>\n          <option value=\"other\">Other</option>\n          <option value=\"personal\">Personal</option>\n          <option value=\"work\">Work</option>\n          <option value=\"study\">Study</option>\n        </select>\n        <button type=\"submit\">Create Note</button>\n      </form>\n\n      <div className=\"notes-grid\">\n        {notes.map((note) => (\n          <div className=\"note-item\" key={note.id}>\n            <h2>{note.title}</h2>\n            <p>{note.content}</p>\n            <p>{note.category}</p>\n            {/* Heart icon button to toggle favorite */}\n            <button onClick={() => toggleFavorite(note.id)}>\n              {note.isFavorite ? '❤️' : '♡'} {/* Full heart or empty heart */}\n            </button>\n          </div>\n        ))}\n      </div>\n\n      <h3>List of favorites:</h3>\n      <ul>\n        {favorites.map((fav) => (\n          <li key={fav.id}>{fav.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}